import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class WordCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Word Counter");

        String text = getInputText(scanner);

        if (text.isEmpty()) {
            System.out.println("No input text or file provided. Exiting.");
            System.exit(1);
        }

        String[] words = text.split("[\\s\\p{Punct}]+");
        int wordCount = words.length;

        System.out.println("Total words: " + wordCount);

        // Count unique words and their frequencies
        Map<String, Integer> wordFrequency = new HashMap<>();
        for (String word : words) {
            wordFrequency.put(word, wordFrequency.getOrDefault(word, 0) + 1);
        }

        System.out.println("Unique words: " + wordFrequency.size());

        // Display word frequencies
        System.out.println("Word frequencies:");
        for (Map.Entry<String, Integer> entry : wordFrequency.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }

    private static String getInputText(Scanner scanner) {
        System.out.println("Select an option:");
        System.out.println("1. Enter text manually");
        System.out.println("2. Read from a file");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        if (choice == 1) {
            System.out.print("Enter the text: ");
            return scanner.nextLine();
        } else if (choice == 2) {
            System.out.print("Enter the file name (e.g., input.txt): ");
            String fileName = scanner.nextLine();
            try {
                return readFile(fileName);
            } catch (IOException e) {
                System.err.println("Error reading the file. Make sure the file exists and is accessible.");
                return "";
            }
        } else {
            System.out.println("Invalid choice. No input text or file provided.");
            return "";
        }
    }

    private static String readFile(String fileName) throws IOException {
        StringBuilder text = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = reader.readLine()) != null) {
                text.append(line).append(" ");
            }
        }
        return text.toString();
    }
}
